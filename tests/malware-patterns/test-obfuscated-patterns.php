<?php
/**
 * Test cases for obfuscated malware detection
 * These are sanitized examples that won't execute but match patterns
 */

class Test_Obfuscated_Patterns extends WP_UnitTestCase {
	private $scanner;

	public function setUp(): void {
		parent::setUp();
		$this->scanner = new Obfuscated_Malware_Scanner();
	}

	/**
	 * Test variable function call detection
	 */
	public function test_variable_function_calls() {
		$malicious_code = <<<'CODE'
$x='base64_decode';$y='eval';$z=$y($x('YmFkX2NvZGU='));
CODE;
		$this->assertTrue( $this->scanner->containsMalware( $malicious_code ) );
	}

	/**
	 * Test string splitting detection
	 */
	public function test_string_splitting() {
		$malicious_code = <<<'CODE'
$x = 'ev'.'al'.'(ba'.'se'.'64'.'_de'.'co'.'de)';
CODE;
		$this->assertTrue( $this->scanner->containsMalware( $malicious_code ) );
	}

	/**
	 * Test multi-layer encoding detection
	 */
	public function test_multilayer_encoding() {
		$malicious_code = <<<'CODE'
eval(base64_decode(str_rot13(gzinflate($encoded))));
CODE;
		$this->assertTrue( $this->scanner->containsMalware( $malicious_code ) );
	}

	/**
	 * Test WordPress hook abuse detection
	 */
	public function test_wordpress_hook_abuse() {
		$malicious_code = <<<'CODE'
add_action('wp_head', create_function('', 'eval(base64_decode("'.base64_encode($evil).'"));'));
CODE;
		$this->assertTrue( $this->scanner->containsMalware( $malicious_code ) );
	}

	/**
	 * Test hidden code in images
	 */
	public function test_hidden_code_in_images() {
		$malicious_code = "\xFF\xD8\xFF\xE0" . '<?php eval(base64_decode("hidden"));';
		$this->assertTrue( $this->scanner->containsMalware( $malicious_code ) );
	}

	/**
	 * Test legitimate code is not flagged
	 */
	public function test_legitimate_code() {
		$legitimate_code = <<<'CODE'
add_action('wp_head', 'wp_generator');
$content = base64_decode($legitimate_image_data);
include_once(ABSPATH . 'wp-admin/includes/plugin.php');
CODE;
		$this->assertFalse( $this->scanner->containsMalware( $legitimate_code ) );
	}
}
